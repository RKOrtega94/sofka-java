services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      - SPRING_CLOUD_GATEWAY_ROUTES_0_ID=client-route
      - SPRING_CLOUD_GATEWAY_ROUTES_0_URI=http://client:8081
      - SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0=Path=/api/clientes/**
      - SPRING_CLOUD_GATEWAY_ROUTES_1_ID=account-route
      - SPRING_CLOUD_GATEWAY_ROUTES_1_URI=http://account:8082
      - SPRING_CLOUD_GATEWAY_ROUTES_1_PREDICATES_0=Path=/api/cuentas/**
      - SPRING_CLOUD_GATEWAY_ROUTES_2_ID=account-route-2
      - SPRING_CLOUD_GATEWAY_ROUTES_2_URI=http://account:8082
      - SPRING_CLOUD_GATEWAY_ROUTES_2_PREDICATES_0=Path=/api/movimientos/**

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/client_database
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres

  account:
    build:
      context: ./account
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/account_database
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - CLIENTS_USER=http://client:8081/api/clientes
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_MULTIPLE_DATABASES=client_database,account_database
    volumes:
      - ./BaseDatos.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: